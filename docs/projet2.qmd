---
title: Projet 2
format: html
execute:
  enabled: true
  echo: true
  warning: false
jupyter: python3
---

Ici, les cartes issues de nos principaux travaux.

```{python}
import osmnx as ox
import folium
import pandas as pd
import ipywidgets as widgets
from IPython.display import display, clear_output
from src.fonctions_basedonnees import *

# Effacer le cache
coordonne.cache_clear()

# Configuration initiale
ville = "Montpellier, France"
G = ox.graph_from_place(ville, network_type="all")
m = folium.Map(location=[43.6114, 3.8767], zoom_start=13)

# Charger le DataFrame
df_coursesvelomagg_traité = pd.read_csv("../data/CoursesVelomagg.csv").dropna()
liste_des_trajets = df_coursesvelomagg_traité[['Departure', 'Departure station', 'Return station', 'Covered distance (m)', 'Duration (sec.)']]

# Nettoyer et normaliser les colonnes
liste_des_trajet_DBF = liste_des_trajets.copy()
liste_des_trajet_DBF['Departure station'] = liste_des_trajet_DBF['Departure station'].apply(nettoyer_adresse_normalise)
liste_des_trajet_DBF['Return station'] = liste_des_trajet_DBF['Return station'].apply(nettoyer_adresse_normalise)

# Remplacements spécifiques
liste_des_trajet_DBF['Departure station'] = liste_des_trajet_DBF['Departure station'].replace("FacdesSciences", "Faculté des sciences")
liste_des_trajet_DBF['Return station'] = liste_des_trajet_DBF['Return station'].replace("FacdesSciences", "Faculté des sciences")
liste_des_trajet_DBF['Departure station'] = liste_des_trajet_DBF['Departure station'].replace(r".*Gare Saint-Roch$", "Gare Saint-Roch", regex=True)
liste_des_trajet_DBF['Return station'] = liste_des_trajet_DBF['Return station'].replace(r".*Gare Saint-Roch$", "Gare Saint-Roch", regex=True)

# Liste des dates disponibles
Liste_des_dates = liste_des_trajet_DBF['Departure'].str[:10].unique()

# Widgets interactifs
date_selector = widgets.Dropdown(
    options=Liste_des_dates,
    description="Date:",
    style={'description_width': 'initial'}
)

trajet_toggle = widgets.Checkbox(
    value=False,
    description="Tracer les trajets ?",
    style={'description_width': 'initial'}
)

trajet_slider = widgets.IntSlider(
    value=1,
    min=1,
    max=10,
    step=1,
    description="Nombre de trajets:",
    style={'description_width': 'initial'}
)

button_display = widgets.Button(description="Afficher la carte")

output = widgets.Output()

def update_map(change):
    with output:
        clear_output()
        selected_date = date_selector.value
        tracer = trajet_toggle.value
        nb_trajets = trajet_slider.value

        trajets_du_jour = liste_des_trajet_DBF[liste_des_trajet_DBF['Departure'].str.startswith(selected_date)]
        trajets_du_jour = trajets_du_jour.reset_index(drop=True)

        nb_ref = len(trajets_du_jour)
        print(f"Nous avons {nb_ref} référence(s) pour la date {selected_date}.")
        
        if tracer:
            print(f"Traçage des {min(nb_trajets, nb_ref)} trajets:")
            for i in range(min(nb_trajets, nb_ref)):
                trajet = trajets_du_jour.iloc[i]
                if trajet['Covered distance (m)'] < 2000:
                    gen_carte_trajet(trajet, G, m, 1, 2, 'green')
                elif 2000 < trajet['Covered distance (m)'] < 4000:
                    gen_carte_trajet(trajet, G, m, 1, 2, 'blue')
                else:
                    gen_carte_trajet(trajet, G, m, 1, 2, 'red')
            
            # Légende
            legend_html = """
            <div style="
                position: fixed;
                bottom: 50px;
                left: 50px;
                width: 200px;
                height: 120px;
                background-color: white;
                border:2px solid grey;
                z-index:9999;
                font-size:14px;
                padding: 10px;
                ">
                <b>Légende des distances</b> <br>
                <i style="background:green; width: 10px; height: 10px; float: left; margin-right: 10px;"></i> Moins de 2000 m<br>
                <i style="background:blue; width: 10px; height: 10px; float: left; margin-right: 10px;"></i> Entre 2000 et 4000 m<br>
                <i style="background:red; width: 10px; height: 10px; float: left; margin-right: 10px;"></i> Plus de 4000 m<br>
            </div>
            """
            m.get_root().html.add_child(folium.Element(legend_html))
            m.save("../visualisation/carte_montpellier_trajet_via_BD.html")
            print("Carte sauvegardée dans '../visualisation/carte_montpellier_trajet_via_BD.html'.")
        else:
            print("Traçage non activé.")

button_display.on_click(update_map)

# Affichage des widgets
display(date_selector, trajet_toggle, trajet_slider, button_display, output)

```

