---
title: "Visualisation des trajets en vélo dans la ville de Montpellier."
format: html
execute:
  echo: false
  enabled: true
---
## A propos

CycleVision3 est un projet qui vise à décrire le trafic cycliste à Montpellier à travers l'analyse des quelques jeux de données suivants : 

- [Trajets à vélos en libre-service](https://data.montpellier3m.fr/dataset/courses-des-velos-velomagg-de-montpellier-mediterranee-metropole)
- [Comptages vélo et piéton issus des compteurs de vélo](https://data.montpellier3m.fr/dataset/comptages-velo-et-pieton-issus-des-compteurs-de-velo)
- [OpenStreetMap](https://www.openstreetmap.org/#map=6/46.45/2.21)
  
Il s'agit principalement d'un projet de visualisation, avec des cartes (dont certaines sont interactives) et une vidéo. Les principaux projets sont disponibles dans l'onglet éponyme. 


## Stations de vélos à Montpellier.

Ci-dessous, vous trouverez une carte interactive présentant le **nombre de vélos en temps réel** disponibles dans les stations de la métropole de Montpellier.  

Cette carte offre une vue d'ensemble dynamique permettant de suivre l'état des stations en direct.

```{python}
import osmnx as ox
import folium
import requests
import json

# Définir l'endroit
ville = "Montpellier, France"

# Récupérer le polygone des limites de Montpellier
frontiere = ox.geocode_to_gdf(ville)

# Obtenir les coordonnées du centre de Montpellier
location = ox.geocode(ville)

# Créer une carte Folium
m = folium.Map(location=location, zoom_start=14)

# Extraire les coordonnées des limites de la ville
coords = frontiere.geometry.values[0].exterior.coords[:]
# Tracer le polygone
folium.Polygon(
    locations=[(lat, lon) for lon, lat in coords],  # (lat, lon)
    color='black',
    fill=False,
    weight=2.5,  # Épaisseur de la bordure
).add_to(m)

# URL de l'API
url = "https://portail-api-data.montpellier3m.fr/bikestation?limit=1000"
# Envoi de la requête GET
fichier = requests.get(url, headers={"accept": "application/json"})
# Vérifier si la requête a réussi
if fichier.status_code == 200:
    data = fichier.json()  # Extraire les données JSON

# Ajouter des marqueurs avec les informations sur les vélos disponibles dans le popup
for station in data:
    # Extraire l'adresse, le nombre de vélos disponibles et le nombre de places libres
    address = station['address']['value']['streetAddress']
    velo_present = station['availableBikeNumber']['value']
    total_place = station['freeSlotNumber']['value']
    rapport = (velo_present / total_place) * 100 if total_place > 0 else 0
    popup_text = f"""
    <div style="font-size: 14px; font-weight: bold; color: black;">
        <p><b>Station:</b> {address}</p>
        <p><b>Vélos disponibles:</b> {velo_present}</p>
        <p><b>Vélos total:</b> {total_place}</p>
        <p><b>Pourcentage de vélos disponibles:</b> {rapport:.2f}%</p>
    </div>
    """
    coords = station['location']['value']['coordinates']
    folium.Marker(
        location=(coords[1], coords[0]),  # (lat, lon)
        popup=folium.Popup(popup_text, max_width=300),
        icon=folium.Icon(color='blue', icon='info-sign')
    ).add_to(m)

# Sauvegarder la carte dans un fichier HTML dans un dossier du site
output_path = "./montpellier_bike_stations_map.html"  # Adaptez le chemin si nécessaire
m.save(output_path)
```

<iframe src="montpellier_bike_stations_map.html" width="100%" height="600"></iframe>


## Contact

Pour toute question ou suggestion, n'hésitez pas à [nous contacter](auteurs.qmd).